name: 'Deploy'

on:
  push:
    tags:
      - v[0-9]+.*
  workflow_dispatch:

permissions:
  contents: read

jobs:
  deploy:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3.1.1

    - name: Setup Python
      uses: actions/setup-python@v5.1.0

    - name: Install Python Packages
      run: pip install -r requirements.txt
  
    # Build files required by terraform
    - name: Build
      run: ./build.py

    # Prime tfvars
    - name: Setup Base Terraform Vars
      working-directory: ./terraform
      run: cp base.prod.tfvars terraform.tfvars

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      working-directory: ./terraform
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    # Commented out, as the 'terraform apply' step doesn't use the output of this.. what a weird template.
    # - name: Terraform Plan
    #   working-directory: ./terraform
    #   run: terraform plan -input=false

    - name: Terraform Apply
      working-directory: ./terraform
      run: >-
        terraform apply -auto-approve -input=false
        -var telegram_bot_token="${{ secrets.TELEGRAM_BOT_TOKEN }}"
        -var main_chat_id="${{ secrets.MAIN_CHAT_ID }}"
        -var bar_spreadsheet="${{ secrets.BAR_SPREADSHEET }}"
        -var selenium_server_url="${{ secrets.SELENIUM_SERVER_URL }}"
